<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="FlashcardsTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2020-03-24T08:59:26" hostname="GopherPC" time="0.205">
  <properties/>
  <testcase name="start" classname="FlashcardsTest" time="0.205">
    <failure message="java.lang.AssertionError: Wrong answer in test #2&#10;&#10;Your line&#10;`Input the action (add, remove, import, export, ask, exit):`&#10;should contain `saved` (ignoring case).&#10;This line should indicate, that the log has been saved.&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;hardest card&#10;There are no cards with errors.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;add&#10;The card:&#10;&gt;France&#10;The definition of the card:&#10;&gt;Paris&#10;The pair (&quot;France&quot;:&quot;Paris&quot;) has been added.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;ask&#10;How many times to ask?&#10;&gt;2&#10;Print the definition of &quot;France&quot;:&#10;&gt;France&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;hardest card&#10;The hardest card is &quot;France&quot;. You have 2 errors answering it.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;reset stats&#10;Card statistics has been reset.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;hardest card&#10;There are no cards with errors.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;add&#10;The card:&#10;&gt;Russia&#10;The definition of the card:&#10;&gt;Moscow&#10;The pair (&quot;Russia&quot;:&quot;Moscow&quot;) has been added.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;ask&#10;How many times to ask?&#10;&gt;2&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;hardest card&#10;The hardest card is &quot;France&quot;. You have 2 errors answering it.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;ask&#10;How many times to ask?&#10;&gt;2&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;hardest card&#10;The hardest card is &quot;France&quot;. You have 4 errors answering it.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;ask&#10;How many times to ask?&#10;&gt;2&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;hardest card&#10;The hardest card is &quot;France&quot;. You have 6 errors answering it.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;ask&#10;How many times to ask?&#10;&gt;2&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Print the definition of &quot;Russia&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Moscow&quot;.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;hardest card&#10;The hardest card is &quot;France&quot;. You have 7 errors answering it.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;ask&#10;How many times to ask?&#10;&gt;2&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Print the definition of &quot;France&quot;:&#10;&gt;??&#10;Wrong answer. The correct one is &quot;Paris&quot;.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;hardest card&#10;The hardest card is &quot;France&quot;. You have 9 errors answering it.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;export&#10;File name:&#10;&gt;capitals.txt&#10;2 cards have been saved.&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;log&#10;Unexpected command: log&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;testLog.txt&#10;Unexpected command: testLog.txt&#10;Input the action (add, remove, import, export, ask, exit):&#10;&gt;exit&#10;Bye bye!" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #2

Your line
`Input the action (add, remove, import, export, ask, exit):`
should contain `saved` (ignoring case).
This line should indicate, that the log has been saved.

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Input the action (add, remove, import, export, ask, exit):
&gt;hardest card
There are no cards with errors.
Input the action (add, remove, import, export, ask, exit):
&gt;add
The card:
&gt;France
The definition of the card:
&gt;Paris
The pair (&quot;France&quot;:&quot;Paris&quot;) has been added.
Input the action (add, remove, import, export, ask, exit):
&gt;ask
How many times to ask?
&gt;2
Print the definition of &quot;France&quot;:
&gt;France
Wrong answer. The correct one is &quot;Paris&quot;.
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Input the action (add, remove, import, export, ask, exit):
&gt;hardest card
The hardest card is &quot;France&quot;. You have 2 errors answering it.
Input the action (add, remove, import, export, ask, exit):
&gt;reset stats
Card statistics has been reset.
Input the action (add, remove, import, export, ask, exit):
&gt;hardest card
There are no cards with errors.
Input the action (add, remove, import, export, ask, exit):
&gt;add
The card:
&gt;Russia
The definition of the card:
&gt;Moscow
The pair (&quot;Russia&quot;:&quot;Moscow&quot;) has been added.
Input the action (add, remove, import, export, ask, exit):
&gt;ask
How many times to ask?
&gt;2
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Input the action (add, remove, import, export, ask, exit):
&gt;hardest card
The hardest card is &quot;France&quot;. You have 2 errors answering it.
Input the action (add, remove, import, export, ask, exit):
&gt;ask
How many times to ask?
&gt;2
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Input the action (add, remove, import, export, ask, exit):
&gt;hardest card
The hardest card is &quot;France&quot;. You have 4 errors answering it.
Input the action (add, remove, import, export, ask, exit):
&gt;ask
How many times to ask?
&gt;2
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Input the action (add, remove, import, export, ask, exit):
&gt;hardest card
The hardest card is &quot;France&quot;. You have 6 errors answering it.
Input the action (add, remove, import, export, ask, exit):
&gt;ask
How many times to ask?
&gt;2
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Print the definition of &quot;Russia&quot;:
&gt;??
Wrong answer. The correct one is &quot;Moscow&quot;.
Input the action (add, remove, import, export, ask, exit):
&gt;hardest card
The hardest card is &quot;France&quot;. You have 7 errors answering it.
Input the action (add, remove, import, export, ask, exit):
&gt;ask
How many times to ask?
&gt;2
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Print the definition of &quot;France&quot;:
&gt;??
Wrong answer. The correct one is &quot;Paris&quot;.
Input the action (add, remove, import, export, ask, exit):
&gt;hardest card
The hardest card is &quot;France&quot;. You have 9 errors answering it.
Input the action (add, remove, import, export, ask, exit):
&gt;export
File name:
&gt;capitals.txt
2 cards have been saved.
Input the action (add, remove, import, export, ask, exit):
&gt;log
Unexpected command: log
Input the action (add, remove, import, export, ask, exit):
&gt;testLog.txt
Unexpected command: testLog.txt
Input the action (add, remove, import, export, ask, exit):
&gt;exit
Bye bye!
	at org.junit.Assert.fail(Assert.java:88)
	at org.hyperskill.hstest.v6.stage.BaseStageTest.start(BaseStageTest.java:172)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Input the action (add, remove, import, export, ask, exit):
>export
File name:
>capitals.txt
0 cards have been saved.
Input the action (add, remove, import, export, ask, exit):
>exit
Bye bye!
?[1;31m
Start test 2?[0m
Input the action (add, remove, import, export, ask, exit):
>hardest card
There are no cards with errors.
Input the action (add, remove, import, export, ask, exit):
>add
The card:
>France
The definition of the card:
>Paris
The pair ("France":"Paris") has been added.
Input the action (add, remove, import, export, ask, exit):
>ask
How many times to ask?
>2
Print the definition of "France":
>France
Wrong answer. The correct one is "Paris".
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Input the action (add, remove, import, export, ask, exit):
>hardest card
The hardest card is "France". You have 2 errors answering it.
Input the action (add, remove, import, export, ask, exit):
>reset stats
Card statistics has been reset.
Input the action (add, remove, import, export, ask, exit):
>hardest card
There are no cards with errors.
Input the action (add, remove, import, export, ask, exit):
>add
The card:
>Russia
The definition of the card:
>Moscow
The pair ("Russia":"Moscow") has been added.
Input the action (add, remove, import, export, ask, exit):
>ask
How many times to ask?
>2
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Input the action (add, remove, import, export, ask, exit):
>hardest card
The hardest card is "France". You have 2 errors answering it.
Input the action (add, remove, import, export, ask, exit):
>ask
How many times to ask?
>2
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Input the action (add, remove, import, export, ask, exit):
>hardest card
The hardest card is "France". You have 4 errors answering it.
Input the action (add, remove, import, export, ask, exit):
>ask
How many times to ask?
>2
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Input the action (add, remove, import, export, ask, exit):
>hardest card
The hardest card is "France". You have 6 errors answering it.
Input the action (add, remove, import, export, ask, exit):
>ask
How many times to ask?
>2
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Print the definition of "Russia":
>??
Wrong answer. The correct one is "Moscow".
Input the action (add, remove, import, export, ask, exit):
>hardest card
The hardest card is "France". You have 7 errors answering it.
Input the action (add, remove, import, export, ask, exit):
>ask
How many times to ask?
>2
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Print the definition of "France":
>??
Wrong answer. The correct one is "Paris".
Input the action (add, remove, import, export, ask, exit):
>hardest card
The hardest card is "France". You have 9 errors answering it.
Input the action (add, remove, import, export, ask, exit):
>export
File name:
>capitals.txt
2 cards have been saved.
Input the action (add, remove, import, export, ask, exit):
>log
Unexpected command: log
Input the action (add, remove, import, export, ask, exit):
>testLog.txt
Unexpected command: testLog.txt
Input the action (add, remove, import, export, ask, exit):
>exit
Bye bye!
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
